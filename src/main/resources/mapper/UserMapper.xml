<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zmy.blog.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.zmy.blog.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pass" jdbcType="VARCHAR" property="userPass" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_url" jdbcType="VARCHAR" property="userUrl" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="user_last_login_ip" jdbcType="VARCHAR" property="userLastLoginIp" />
    <result column="user_register_time" jdbcType="TIMESTAMP" property="userRegisterTime" />
    <result column="user_last_login_time" jdbcType="TIMESTAMP" property="userLastLoginTime" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
  </resultMap>

  <sql id="tb">user</sql>

  <sql id="Base_Column_List">
    user_id, user_name, user_pass, user_nickname, user_email, user_url, user_avatar,
    user_last_login_ip, user_register_time, user_last_login_time, user_status
  </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectByExample" parameterType="com.zmy.blog.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zmy.blog.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zmy.blog.entity.User">
    insert into user (user_id, user_name, user_pass, 
      user_nickname, user_email, user_url, 
      user_avatar, user_last_login_ip, user_register_time, 
      user_last_login_time, user_status)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP}, 
      #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zmy.blog.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPass != null">
        user_pass,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userUrl != null">
        user_url,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="userLastLoginIp != null">
        user_last_login_ip,
      </if>
      <if test="userRegisterTime != null">
        user_register_time,
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userUrl != null">
        #{userUrl,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userLastLoginIp != null">
        #{userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="userRegisterTime != null">
        #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastLoginTime != null">
        #{userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zmy.blog.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPass != null">
        user_pass = #{record.userPass,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.userUrl != null">
        user_url = #{record.userUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.userLastLoginIp != null">
        user_last_login_ip = #{record.userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.userRegisterTime != null">
        user_register_time = #{record.userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userLastLoginTime != null">
        user_last_login_time = #{record.userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_pass = #{record.userPass,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      user_url = #{record.userUrl,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      user_last_login_ip = #{record.userLastLoginIp,jdbcType=VARCHAR},
      user_register_time = #{record.userRegisterTime,jdbcType=TIMESTAMP},
      user_last_login_time = #{record.userLastLoginTime,jdbcType=TIMESTAMP},
      user_status = #{record.userStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmy.blog.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userUrl != null">
        user_url = #{userUrl,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="userLastLoginIp != null">
        user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="userRegisterTime != null">
        user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zmy.blog.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_url = #{userUrl,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
      user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!--根据用户名或邮箱获得用户-->
  <select id="getUserByNameOrEmail" parameterType="java.lang.String" resultType="com.zmy.blog.entity.User">
    select
        <include refid="Base_Column_List" />
    from
        <include refid="tb" />
    where
        user_name = #{username,jdbcType=INTEGER} or user_email = #{userEmail,jdbcType=VARCHAR}
    and
        user_status > 0
    limit 1
  </select>
</mapper>
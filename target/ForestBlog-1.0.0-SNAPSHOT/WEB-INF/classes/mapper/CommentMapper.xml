<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zmy.blog.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.zmy.blog.entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_pid" jdbcType="INTEGER" property="commentPid" />
    <result column="comment_pname" jdbcType="VARCHAR" property="commentPname" />
    <result column="comment_article_id" jdbcType="INTEGER" property="commentArticleId" />
    <result column="comment_author_name" jdbcType="VARCHAR" property="commentAuthorName" />
    <result column="comment_author_email" jdbcType="VARCHAR" property="commentAuthorEmail" />
    <result column="comment_author_url" jdbcType="VARCHAR" property="commentAuthorUrl" />
    <result column="comment_author_avatar" jdbcType="VARCHAR" property="commentAuthorAvatar" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_agent" jdbcType="VARCHAR" property="commentAgent" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="comment_create_time" jdbcType="TIMESTAMP" property="commentCreateTime" />
    <result column="comment_role" jdbcType="INTEGER" property="commentRole" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.zmy.blog.entity.Comment" extends="BaseResultMap">
    <association property="article" javaType="com.zmy.blog.entity.Article">
      <id column="article_id" jdbcType="INTEGER" property="articleId" />
      <result column="article_user_id" jdbcType="INTEGER" property="articleUserId" />
      <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
      <result column="article_view_count" jdbcType="INTEGER" property="articleViewCount" />
      <result column="article_comment_count" jdbcType="INTEGER" property="articleCommentCount" />
      <result column="article_like_count" jdbcType="INTEGER" property="articleLikeCount" />
      <result column="article_is_comment" jdbcType="INTEGER" property="articleIsComment" />
      <result column="article_status" jdbcType="INTEGER" property="articleStatus" />
      <result column="article_order" jdbcType="INTEGER" property="articleOrder" />
      <result column="article_update_time" jdbcType="TIMESTAMP" property="articleUpdateTime" />
      <result column="article_create_time" jdbcType="TIMESTAMP" property="articleCreateTime" />
    </association>
  </resultMap>
  <sql id="Article_Base_Column_List">
    article_id, article_user_id, article_title, article_view_count, article_comment_count,
    article_like_count, article_is_comment, article_status, article_order, article_update_time,
    article_create_time
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, comment_pid, comment_pname, comment_article_id, comment_author_name, 
    comment_author_email, comment_author_url, comment_author_avatar, comment_content, 
    comment_agent, comment_ip, comment_create_time, comment_role
  </sql>
  <select id="selectByExample" parameterType="com.zmy.blog.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zmy.blog.entity.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zmy.blog.entity.Comment">
    insert into comment (comment_id, comment_pid, comment_pname, 
      comment_article_id, comment_author_name, comment_author_email, 
      comment_author_url, comment_author_avatar, 
      comment_content, comment_agent, comment_ip, 
      comment_create_time, comment_role)
    values (#{commentId,jdbcType=INTEGER}, #{commentPid,jdbcType=INTEGER}, #{commentPname,jdbcType=VARCHAR}, 
      #{commentArticleId,jdbcType=INTEGER}, #{commentAuthorName,jdbcType=VARCHAR}, #{commentAuthorEmail,jdbcType=VARCHAR}, 
      #{commentAuthorUrl,jdbcType=VARCHAR}, #{commentAuthorAvatar,jdbcType=VARCHAR}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentAgent,jdbcType=VARCHAR}, #{commentIp,jdbcType=VARCHAR}, 
      #{commentCreateTime,jdbcType=TIMESTAMP}, #{commentRole,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zmy.blog.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="commentPid != null">
        comment_pid,
      </if>
      <if test="commentPname != null">
        comment_pname,
      </if>
      <if test="commentArticleId != null">
        comment_article_id,
      </if>
      <if test="commentAuthorName != null">
        comment_author_name,
      </if>
      <if test="commentAuthorEmail != null">
        comment_author_email,
      </if>
      <if test="commentAuthorUrl != null">
        comment_author_url,
      </if>
      <if test="commentAuthorAvatar != null">
        comment_author_avatar,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentAgent != null">
        comment_agent,
      </if>
      <if test="commentIp != null">
        comment_ip,
      </if>
      <if test="commentCreateTime != null">
        comment_create_time,
      </if>
      <if test="commentRole != null">
        comment_role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentPid != null">
        #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentPname != null">
        #{commentPname,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        #{commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorEmail != null">
        #{commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorUrl != null">
        #{commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorAvatar != null">
        #{commentAuthorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentAgent != null">
        #{commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="commentIp != null">
        #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentRole != null">
        #{commentRole,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zmy.blog.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.commentPid != null">
        comment_pid = #{record.commentPid,jdbcType=INTEGER},
      </if>
      <if test="record.commentPname != null">
        comment_pname = #{record.commentPname,jdbcType=VARCHAR},
      </if>
      <if test="record.commentArticleId != null">
        comment_article_id = #{record.commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="record.commentAuthorName != null">
        comment_author_name = #{record.commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="record.commentAuthorEmail != null">
        comment_author_email = #{record.commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.commentAuthorUrl != null">
        comment_author_url = #{record.commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.commentAuthorAvatar != null">
        comment_author_avatar = #{record.commentAuthorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentAgent != null">
        comment_agent = #{record.commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentIp != null">
        comment_ip = #{record.commentIp,jdbcType=VARCHAR},
      </if>
      <if test="record.commentCreateTime != null">
        comment_create_time = #{record.commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentRole != null">
        comment_role = #{record.commentRole,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      comment_pid = #{record.commentPid,jdbcType=INTEGER},
      comment_pname = #{record.commentPname,jdbcType=VARCHAR},
      comment_article_id = #{record.commentArticleId,jdbcType=INTEGER},
      comment_author_name = #{record.commentAuthorName,jdbcType=VARCHAR},
      comment_author_email = #{record.commentAuthorEmail,jdbcType=VARCHAR},
      comment_author_url = #{record.commentAuthorUrl,jdbcType=VARCHAR},
      comment_author_avatar = #{record.commentAuthorAvatar,jdbcType=VARCHAR},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      comment_agent = #{record.commentAgent,jdbcType=VARCHAR},
      comment_ip = #{record.commentIp,jdbcType=VARCHAR},
      comment_create_time = #{record.commentCreateTime,jdbcType=TIMESTAMP},
      comment_role = #{record.commentRole,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmy.blog.entity.Comment">
    update comment
    <set>
      <if test="commentPid != null">
        comment_pid = #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentPname != null">
        comment_pname = #{commentPname,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      </if>
      <if test="commentAuthorName != null">
        comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorEmail != null">
        comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorUrl != null">
        comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentAuthorAvatar != null">
        comment_author_avatar = #{commentAuthorAvatar,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentAgent != null">
        comment_agent = #{commentAgent,jdbcType=VARCHAR},
      </if>
      <if test="commentIp != null">
        comment_ip = #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="commentCreateTime != null">
        comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentRole != null">
        comment_role = #{commentRole,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zmy.blog.entity.Comment">
    update comment
    set comment_pid = #{commentPid,jdbcType=INTEGER},
      comment_pname = #{commentPname,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=INTEGER},
      comment_author_name = #{commentAuthorName,jdbcType=VARCHAR},
      comment_author_email = #{commentAuthorEmail,jdbcType=VARCHAR},
      comment_author_url = #{commentAuthorUrl,jdbcType=VARCHAR},
      comment_author_avatar = #{commentAuthorAvatar,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_agent = #{commentAgent,jdbcType=VARCHAR},
      comment_ip = #{commentIp,jdbcType=VARCHAR},
      comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
      comment_role = #{commentRole,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>

  <select id="getRecentComment" parameterType="java.util.Map" resultMap="BaseResultMap2">
    select
        <include refid="Base_Column_List" />,<include refid="Article_Base_Column_List" />
    from
        comment c,article a
    where
        1=1 and c.comment_article_id = a.article_id
    order by
        comment_create_time desc
    <if test="map.limit != null and map.limit != ''">
        limit #{map.limit}
    </if>
  </select>
</mapper>